openapi: 3.0.0
info:
  description: API documentation for the Track the Thing, a simple application to enable long distance bike races to
    better manage GPS tracker stock. <br>
    It has been developed by Oli M-C and Ben Kirby to support races held by Lost Dot.
  version: 0.0.1
  title: Track the thing
  contact:
    email: hello@olimc.co.uk
  #license: #todo Research and add license
    #name: "TBA"
    #url: ""
#host: "TBA"
#basePath: "TBA"
externalDocs:
  description:
  url:
tags:
- name: riders
  description: Operations concerning riders
- name: trackers
  description: Operations concerning trackers
- name: races
  description: Operations concernng races
paths:
  /riders:
    post:
      tags:
      - riders
      summary: Add a new rider
      description:
      operationId: addRider
      consumes:
      - application/json
      produces:
      - application/json
      requestBody:
        description: Add new rider data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostRider'
      responses:
        # successful response - respond with full rider information
    get:
      tags:
        - riders
      # get a list of all riders. how to paginate?
  /riders/{rider_id}:
    get:
      tags:
        - riders
      summary: Retrive information about one rider
    patch:
      tags:
        - riders
      summary: Change data about a rider
      operationId: patchRider
  /riders/{rider_id}/assignTracker:
    post:
      tags:
        - riders
  /riders/{rider_id}/removeTracker:
    post:
      tags:
        - riders
  /riders/{rider_id}/{race_id}/{checkpoint_id}/assignArrival:
    post:
      tags:
        - riders
        - races
  /riders/{rider_id}/assignRace:
    post:
      tags:
        - riders
        - races
  /races:
    get:
      tags:
        - races
  /races/{race_id}:
    get:
      tags:
        - races
    description: Retrive information about a race
    response:
      200:
        schema:
          $ref: '#/components/schemas/Races'
  /races/{race_id}/riders:
    get:
      tags:
        - races
        - riders
    description: Retrive a list of all riders registered to a race
  /trackers:
    get:
      tags:
        - trackers
    post:
      tags:
        - trackers
  /trackers/{tracker_id}:
    get:
      tags:
        - trackers
    patch:
      tags:
        - trackers
components:
  schemas:
    PostRider:
      type:
        object
      properties:
        firstName:
          $ref: '#/components/schemas/FirstName'
          required: true
        lastName:
          $ref: '#/components/schemas/LastName'
          required: true
        email:
          $ref: '#/components/schemas/Email'
          required: true
    Races:
      type: array
      items:
        type: object
        schema:
          $ref: '#/components/schemas/Race'
    Race:
      type: object
      properties:
        dateStart:
          schema:
            $ref: '#/components/schemas/timeStamp'
        dateEnd:
          schema:
            $ref: '#/components/schemas/timeStamp'
        name:
          schema:
            $ref: '#/components/schemas/RaceName'
        code:
          schema:
            $ref: '#/components/schemas/RaceCode'
    RaceCode:
      type: string
      description: Code for Race
      example: TCR06
    timeStamp:
      type: integer
      description: Unix Epoch timestamp
    RaceName:
      type: string
      description: Name of Race
      example: Transcontinental no. 6
    FirstName:
      type: string
      description: First name of rider
      example: Graham
    LastName:
      type: string
      description: Last name of rider
      example: Dodds
    Email:
      type: string

